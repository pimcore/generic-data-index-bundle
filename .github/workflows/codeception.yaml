name: "Codeception Tests"

on:
    # Enable Later.
    #schedule:
    #    -   cron: '0 3 * * 1,3,5'
    pull_request:
        branches:
            - "[0-9]+.[0-9]+"
            - "[0-9]+.x"
            - "feature-*"
    push:
        branches:
            - "[0-9]+.[0-9]+"
            - "[0-9]+.x"

env:
    PIMCORE_PROJECT_ROOT: ${{ github.workspace }}
    APP_ENV: test
    PIMCORE_TEST: 1

jobs:
    codeception-tests:
        name: "Codeception tests"
        runs-on: "ubuntu-20.04"
        continue-on-error: ${{ matrix.experimental }}
        strategy:
            matrix:
                include:
                    - { php-version: 8.1, dependencies: lowest, pimcore_version: "", experimental: false }
                    - { php-version: 8.2, dependencies: highest, pimcore_version: "", experimental: false }

        services:
            mariadb:
                image: "${{ matrix.database }}"
                ports:
                    - 33006:3306
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes

            opensearch:
                image: opensearchproject/opensearch:latest
                ports:
                    - 39200:9200
                env:
                    cluster.name: "opensearch-cluster"
                    node.name: "opensearch-node"
                    discovery.seed_hosts: "opensearch-node"
                    bootstrap.memory_lock: true
                    OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
                    discovery.type: "single-node"
                    DISABLE_SECURITY_PLUGIN: true

        steps:
            -   name: "Checkout code"
                uses: "actions/checkout@v2"

            -   name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: xdebug
                    ini-values: display_errors=On, display_startup_errors=On, error_reporting=32767
                    php-version: "${{ matrix.php-version }}"

            -   name: "Add authentication for private pimcore packages"
                run: |
                    composer config --global --auth http-basic.enterprise.repo.pimcore.com token ${{ secrets.COMPOSER_PIMCORE_REPO_TOKEN }}

            - name: "Setup Pimcore environment"
              env:
                  REQUIRE_ADMIN_BUNDLE: "${{ matrix.require_admin_bundle }}"
              run: |
                  mysql -e "CREATE DATABASE pimcore_test CHARSET=utf8mb4;"
                  chmod 755 .github/ci/scripts/setup-pimcore-environment-functional-tests.sh
                  .github/ci/scripts/setup-pimcore-environment-functional-tests.sh

            -   name: "Install dependencies with Composer"
                uses: "ramsey/composer-install@v2"
                with:
                    dependency-versions: "${{ matrix.dependencies }}"

            -   name: "Run Codeception"
                run: "vendor/bin/codecept run -c . -vvv --xml --coverage-xml"